@page "/nsw_button"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
<NSWLayout />
<br>
<br>

<div class="container mt-5">
    <h1 class="display-4 text-center">NSW Button Moduli</h1>
    <p class="lead text-center">Loyihalaringizni NSW Button Moduli bilan interaktiv qiling</p>

    <div class="my-5">
        <h2>Umumiy Ma'lumot</h2>
        <p>NSW Button Moduli bitta tugmadan iborat. Sariq belgi bilan belgilangan bu modul NSW Boshqaruv Platasidagi sariq belgili (Raqamli) portlarga ulanadi. Tugma bosilganda LOW signal, qo'yib yuborilganda esa HIGH signal chiqaradi. Ta'lim loyihalaridan tortib, uy avtomatlashtirish tizimlarigacha bo'lgan keng ko'lamli ilovalar uchun ideal yechimdir.</p>
        <img src="images/nsw_button.jpg" alt="NSW Button Moduli tasviri" class="img-fluid rounded shadow my-3" style="max-width: 400px;">
    </div>

    <div class="my-5">
        <h2>Asosiy Xususiyatlari</h2>
        <ul>
            <li>Ishlash kuchlanishi: 3.3V - 5V DC</li>
            <li>Boshqarish rejimi: Raqamli signal (HIGH/LOW)</li>
            <li>Modul hajmi: 20 x 20 x 10 mm (X x Y x Z)</li>
            <li>Ulanish: RJ25 yoki Ulash simlari</li>
            <li>Signal chiqishi: Bosilganda LOW, qo'yib yuborilganda HIGH</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Ilovalar</h2>
        <p>NSW Button Moduli quyidagi loyihalarda qo'llanilishi mumkin:</p>
        <ul>
            <li>Foydalanuvchi interfeysi boshqaruvlari (masalan, yoqish/o'chirish tugmasi)</li>
            <li>Robototexnika loyihalarida trigger signallari</li>
            <li>Ta'lim loyihalari va raqamli signallarni o'rganish</li>
            <li>Uy avtomatlashtirish tizimlari</li>
            <li>Muatqil loyihalar (masalan, qo'ng'iroqlar yoki boshqaruv panellari)</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Pin Ta'rifi</h2>
        <p>Modulda uchta pin mavjud bo'lib, ularning vazifalari quyidagicha:</p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Pin</th>
                    <th>Vazifasi</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>GND</td>
                    <td>Manfiy to'k (Ground)</td>
                </tr>
                <tr>
                    <td>VCC</td>
                    <td>Quvvat manbai (3.3V yoki 5V)</td>
                </tr>
                <tr>
                    <td>Signal</td>
                    <td>Raqamli signal chiqishi (LOW/HIGH)</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="my-5">
        <h2>Simlarni Ulanish Rejimi</h2>
        <h3>RJ25 bilan ulanish</h3>
        <p>NSW Button Moduli sariq IDga ega bo'lib, RJ25 porti orqali NSW Boshqaruv Platasidagi sariq ID bilan belgilangan barcha portlarga ulanadi </p>
        <img src="images/button_rj25.jpg" alt="NSW Button Moduli RJ25 ulanish tasviri" class="img-fluid rounded shadow my-3" style="max-width: 400px;">
        
    </div>

    <div class="my-5">
        <h2>Dasturlash bo'yicha Qo'llanma</h2>
        <h3>Arduino dasturlash</h3>
        <p>Quyidagi Arduino kodi tugma bosilganini aniqlab, holatni ketma-ket monitorga chiqaradi. Standart Arduino funktsiyalari yetarli bo'lib, qo'shimcha kutubxonalar talab qilinmaydi.</p>
        <pre><code>
int buttonPin = 7; // Signal pinini D7 ga uladik

void setup() {
  pinMode(buttonPin, INPUT_PULLUP); // Tugma pinini kirish sifatida sozlash
  Serial.begin(9600);              // Ketma-ket portni ishga tushirish
}

void loop() {
  int buttonState = digitalRead(buttonPin); // Tugma holatini o'qish
  if (buttonState == LOW) {
    Serial.println("Tugma bosildi");
  } else {
    Serial.println("Tugma bosilmadi");
  }
  delay(100); // 100 ms kutish
}
        </code></pre>
        <p>Bu kod tugma bosilganda LOW signalni, qo'yib yuborilganda esa HIGH signalni aniqlaydi va holatni ketma-ket monitorga chop etadi.</p>
    </div>

    <div class="my-5">
        <h3>Umumiy Tahlil</h3>
        <p>NSW Button Moduli oddiy elektromexanik kalit printsipiga asoslanadi. Tugma bosilganda Signal pini GND ga ulanib, LOW signal ishlab chiqaradi. Qo'yib yuborilganda ichki pull-up rezistori tufayli Signal pini HIGH holatga qaytadi. Modul ichki rezistor bilan jihozlangan bo'lib, bu tashqi pull-up rezistorlariga ehtiyojni yo'qotadi va ulanishni soddalashtiradi.</p>
    </div>

    <div class="text-center my-5">
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_passivebuzzer" role="button">
            Oldingisi <i class="fas fa-arrow-left"></i>
        </a>
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_4button" role="button">
            Keyingisi <i class="fas fa-arrow-right"></i>
        </a>
    </div>
</div>

<style>
.custom-btn {
    background: linear-gradient(135deg, rgb(0, 217, 255), rgb(0, 150, 200));
    color: white;
    padding: 12px 24px;
    font-size: 18px;
    font-weight: bold;
    border: none;
    border-radius: 50px;
    transition: all 0.3s ease-in-out;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.custom-btn:hover {
    background: linear-gradient(135deg, rgb(0, 150, 200), rgb(0, 217, 255));
    transform: scale(1.05);
    box-shadow: 0px 5px 15px rgba(0, 217, 255, 0.4);
}

.custom-btn i {
    margin: 0 8px;
}
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("scrollToTop");
        await JSRuntime.InvokeVoidAsync("openNavMenu");
    }
}

<script>
    window.scrollToTop = function () {
        window.scrollTo(0, 0);
    };

    window.openNavMenu = function () {
        let toggler = document.querySelector('.navbar-toggler');
        if (toggler && !toggler.checked) {
            toggler.click();  // Simulate a click to open the menu
        }
    };
</script>