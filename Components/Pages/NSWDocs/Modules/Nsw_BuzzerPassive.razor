@page "/nsw_passivebuzzer"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
<NSWLayout />
<br>
<br>

<div class="container mt-5">
    <h1 class="display-4 text-center">NSW Passive Buzzer Moduli</h1>
    <p class="lead text-center">Loyihalaringizga NSW Passive Buzzer Moduli bilan turli xil ovozli effektlar qo'shing</p>

    <div class="my-5">
        <h2>Umumiy Ma'lumot</h2>
        <p>NSW Passive Buzzer Moduli pyezolektrikkomponent bo'lib, turli chastotali ovozli signallar ishlab chiqarish uchun mo'ljallangan. Bu modul sariq belgi bilan belgilangan bo'lib, u Nsw Boarddagi sariq belgili (Raqamli) portga ulanadi. Ichki osilatorga ega emas, shuning uchun ovoz ishlab chiqarish uchun mikrocontroller (masalan, Arduino) orqali 1.5–2.5 kHz chastotali kvadrat to'lqin signali talab qilinadi. Oddiy ogohlantirish signallaridan tortib, musiqiy ohanglarni ijro etishgacha bo'lgan loyihalarda foydalanish uchun moslashuvchan va ko'p qirrali yechim taqdim etadi.</p>[](https://grobotronics.com/passive-buzzer-module.html?sl=en)[](https://arduinomodules.info/ky-006-passive-buzzer-module/)
        <img src="images/nsw_passivebuzzer.jpg" alt="NSW Passive Buzzer Moduli" class="img-fluid rounded shadow my-3" style="max-width: 400px;">
    </div>

    <div class="my-5">
        <h2>Asosiy Xususiyatlari</h2>
        <ul>
            <li>Ishlash kuchlanishi: 1.5V - 5V DC</li>
            <li>Ovoz chastotasi: 1.5 kHz - 2.5 kHz (PWM signaliga bog'liq)</li>
            <li>Boshqarish rejimi: Raqamli PWM signal</li>
            <li>Modul hajmi: 26 x 15 x 11 mm (X x Y x Z)</li>
            <li>Ulanish: RJ25 yoki Ulash simlari</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Ilovalar</h2>
        <p>NSW Passive Buzzer Moduli quyidagi turli loyihalarda ishlatilishi mumkin:</p>
        <ul>
            <li>Musiqiy ohanglar va melodiyalar ishlab chiqarish</li>
            <li>Robototexnika loyihalarida ovozli ko'rsatkichlar</li>
            <li>Ta'lim loyihalari va PWM signalini o'rganish</li>
            <li>Ogohlantirish signallari va bildirishnomalar</li>
            <li>Mustaqil loyihalar (masalan, o'yinchoqlar)</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Pin Ta'rifi</h2>
        <p>NSW Passive Buzzer Modulida uchta pin mavjud bo'lib, ularning vazifalari quyidagicha:</p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Pin</th>
                    <th>Vazifasi</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>GND (-)</td>
                    <td>Manfiy to'k (Ground)</td>
                </tr>
                <tr>
                    <td>VCC (+)</td>
                    <td>Quvvatlantirish manbai (1.5V - 5V)</td>
                </tr>
                <tr>
                    <td>Signal (S)</td>
                    <td>Ovozni ishlab chiqarish uchun PWM signal</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="my-5">
        <h2>Simlarni Ulanish Rejimi</h2>

        <p>● RJ25 bilan ulanish</p>
        <p>NSW Passive Buzzer Moduli sariq IDga ega bo'lgani uchun RJ25 portidan foydalanganda Makeblock Orion-da sariq ID bilan belgilangan portlarga ulanadi. Masalan, Boshqaruv Platasidagi barcha portlarga ulashingiz mumkin:</p>
    </div>

    <div class="my-5">
        <h2>Dasturlash bo'yicha Qo'llanma</h2>

        <p>Arduino dasturlash</p>
        <p>Arduino yordamida NSW Passive Buzzer Modulini boshqarish uchun PWM signali orqali turli chastotali ovozlar ishlab chiqarish mumkin. Quyidagi misol buzzer'da ikki xil ohangni ketma-ket ijro etadi. Nswblock-Libraries kutubxonasi ixtiyoriy ravishda qo'llanilishi mumkin, lekin standart Arduino `tone()` funksiyasi yetarli:</p>
        <pre>
int buzzerPin = 8; // Signal pinini D8 ga uladik

void setup() {
  pinMode(buzzerPin, OUTPUT); // Buzzer pinini chiqish sifatida sozlash
}

void loop() {
  tone(buzzerPin, 1000); // 1 kHz ohang
  delay(1000);           // 1 soniya kutish
  noTone(buzzerPin);     // Ovozni to'xtatish
  delay(500);            // 0.5 soniya kutish
  tone(buzzerPin, 2000); // 2 kHz ohang
  delay(1000);           // 1 soniya kutish
  noTone(buzzerPin);     // Ovozni to'xtatish
  delay(500);            // 0.5 soniya kutish
}
        </pre>
        <p>Ushbu kod buzzer'da 1 kHz va 2 kHz chastotali ohanglarni navbatma-navbat ijro etadi. Turli melodiyalar ijro etish uchun `tone()` funksiyasiga boshqa chastotalarni kiriting yoki Arduino `pitches.h` kutubxonasidan foydalaning.</p>
    </div>

    <div class="my-5">
        <h3>Prinsipiy Tahlil</h3>
        <p>NSW Passive Buzzer Moduli pyezolektrik effektga asoslanadi. Signal piniga kvadrat to'lqinli PWM signali (1.5–2.5 kHz) berilganda, ichidagi pyezolektrikkristal tebranib, ovoz ishlab chiqaradi. Chastota signalning tezligiga bog'liq, bu esa turli ohanglarni yaratish imkonini beradi. Modul ichki osilatorga ega emas, shuning uchun ovoz ishlab chiqarish uchun tashqi mikrokontroller talab qilinadi. </p>
    </div>

    <div class="text-center my-5">
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_activebuzzer" role="button">
            Oldingisi <i class="fas fa-arrow-left"></i>
        </a>
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_7segment_display" role="button">
            Keyingisi <i class="fas fa-arrow-right"></i>
        </a>
    </div>
</div>

<style>
.custom-btn {
    background: linear-gradient(135deg, rgb(0, 217, 255), rgb(0, 150, 200));
    color: white;
    padding: 12px 24px;
    font-size: 18px;
    font-weight: bold;
    border: none;
    border-radius: 50px;
    transition: all 0.3s ease-in-out;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.custom-btn:hover {
    background: linear-gradient(135deg, rgb(0, 150, 200), rgb(0, 217, 255));
    transform: scale(1.05);
    box-shadow: 0px 5px 15px rgba(0, 217, 255, 0.4);
}

.custom-btn i {
    margin: 0 8px;
}
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("scrollToTop");
        await JSRuntime.InvokeVoidAsync("openNavMenu");
    }
}

<script>
    window.scrollToTop = function () {
        window.scrollTo(0, 0);
    };

    window.openNavMenu = function () {
        let toggler = document.querySelector('.navbar-toggler');
        if (toggler && !toggler.checked) {
            toggler.click();  // Simulate a click to open the menu
        }
    };
</script>