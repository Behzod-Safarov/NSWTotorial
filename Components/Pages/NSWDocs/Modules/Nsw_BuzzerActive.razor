@page "/nsw_activebuzzer"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
<NSWLayout />
<br>
<br>

<div class="container mt-5">
    <h1 class="display-4 text-center">NSW Active Buzzer Moduli</h1>
    <p class="lead text-center">Loyihalaringizga NSW Active Buzzer Moduli bilan ovozli signallar qo'shing</p>

    <div class="my-5">
        <h2>Umumiy Ma'lumot</h2>
        <p>NSW Active Buzzer Moduli ovozli signal beruvchi pyezolektrik komponent bo'lib, loyihalaringizga ovozli ogohlantirishlar yoki indikatorlar qo'shish uchun mo'ljallangan. Bu modul sariq belgi bilan belgilangan bo'lib, u Nsw Boarddagi sariq belgili (Raqamli) portga ulanadi. Ichki osilator tufayli, u faqat quvvat berilganda ~2.5 kHz chastotali doimiy ovoz chiqaradi. Oddiy signalizatsiyadan tortib, foydalanuvchi kiritishlarini tasdiqlashgacha bo'lgan loyihalarda foydalanish uchun qulay va samarali yechim taqdim etadi.</p>[](https://arduinomodules.info/ky-012-active-buzzer-module/)
        <img src="images/nsw_activebuzzer.jpg" alt="NSW Active Buzzer Moduli" class="img-fluid rounded shadow my-3" style="max-width: 400px;">
    </div>

    <div class="my-5">
        <h2>Asosiy Xususiyatlari</h2>
        <ul>
            <li>Ishlash kuchlanishi: 3.3V - 5V DC</li>
            <li>Ovoz chastotasi: Taxminan 2.5 kHz</li>
            <li>Boshqarish rejimi: Raqamli signal (HIGH/LOW)</li>
            <li>Modul hajmi: 34 x 15 x 11 mm (X x Y x Z)</li>
            <li>Ulanish: RJ25 yoki Ulash simlari</li>
            <li>Ovoz balandligi: Taxminan 85 dB (10 sm masofada)</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Ilovalar</h2>
        <p>NSW Active Buzzer Moduli quyidagi turli loyihalarda ishlatilishi mumkin:</p>
        <ul>
            <li>Signalizatsiya tizimlari (masalan, xavfdan ogohlantirish)</li>
            <li>Robototexnika loyihalarida ovozli ko'rsatkichlar</li>
            <li>Ta'lim loyihalari va tajribalar</li>
            <li>Timerlar va foydalanuvchi kiritishlarini tasdiqlash</li>
            <li>Mustaqil loyihalar (masalan, eshik qo'ng'iroqlari)</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Pin Ta'rifi</h2>
        <p>NSW Active Buzzer Modulida uchta pin mavjud bo'lib, ularning vazifalari quyidagicha:</p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Pin</th>
                    <th>Vazifasi</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>GND (-)</td>
                    <td>Manfiy to'k (Ground)</td>
                </tr>
                <tr>
                    <td>VCC (+)</td>
                    <td>Quvvatlantirish manbai (3.3V yoki 5V)</td>
                </tr>
                <tr>
                    <td>Signal (S)</td>
                    <td>Ovozni yoqish/o'chirish uchun raqamli signal</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="my-5">
        <h2>Simlarni Ulanish Rejimi</h2>

        <p>● RJ25 bilan ulanish</p>
        <p>NSW Active Buzzer Moduli sariq IDga ega bo'lgani uchun RJ25 portidan foydalanganda Boshqaruv Platasi-da sariq ID bilan belgilangan portlarga ulanadi. Masalan, Boshqaruv Platasidagi barcha portlarga  ulashingiz mumkin:</p>
        <!-- <img src="images/activebuzzer_rj25.jpg" alt="NSW Active Buzzer RJ25 Ulanishi" class="img-fluid rounded shadow my-3" style="max-width: 400px;"> -->
    </div>

    <div class="my-5">
        <h2>Dasturlash bo'yicha Qo'llanma</h2>

        <p>Arduino dasturlash</p>
        <p>Arduino yordamida NSW Active Buzzer Modulini boshqarish uchun oddiy dastur yozish kifoya. Quyidagi misol buzzer'ni har soniyada yoqib va o'chirib turadi, qisqa ovozli signallar hosil qiladi. Nswblock-Libraries kutubxonasi ixtiyoriy ravishda qo'llanilishi mumkin, lekin oddiy buzzer boshqaruvi uchun standart Arduino funktsiyalari yetarli:</p>[](https://arduinomodules.info/ky-012-active-buzzer-module/)
        <pre>
int buzzerPin = 9; // Signal pinini D9 ga uladik

void setup() {
  pinMode(buzzerPin, OUTPUT); // Buzzer pinini chiqish sifatida sozlash
}

void loop() {
  digitalWrite(buzzerPin, HIGH); // Buzzer'ni yoqish
  delay(500);                    // 0.5 soniya kutish
  digitalWrite(buzzerPin, LOW);  // Buzzer'ni o'chirish
  delay(500);                    // 0.5 soniya kutish
}
        </pre>
        <p>Ushbu kod orqali buzzer qisqa vaqt oralig'ida davriy ovoz chiqarib turadi. Signal pinini o'zgartirish uchun pin raqamini moslashtiring.</p>
    </div>

    <div class="my-5">
        <h3>Prinsipiy Tahlil</h3>
        <p>NSW Active Buzzer Moduli ichki osilatorli pyezolektrik buzzer'ga asoslanadi. Signal piniga HIGH (3.3V yoki 5V) berilganda, modul taxminan 2.5 kHz chastotali doimiy ovoz chiqaradi. Signal LOW (0V) bo'lganda esa ovoz to'xtaydi. Modul o'z ichida tranzistor yoki boshqa komponentlarni o'z ichiga oladi, bu esa mikrokontroller pinlaridan minimal oqim talab qiladi. Ovoz balandligi odatda 85 dB atrofida bo'lib, signalizatsiya va ogohlantirishlar uchun yetarli.</p>
    </div>

    <div class="text-center my-5">
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_yellowled" role="button">
            Oldingisi <i class="fas fa-arrow-left"></i>
        </a>
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_7segment_display" role="button">
            Keyingisi <i class="fas fa-arrow-right"></i>
        </a>
    </div>
</div>

<style>
.custom-btn {
    background: linear-gradient(135deg, rgb(0, 217, 255), rgb(0, 150, 200));
    color: white;
    padding: 12px 24px;
    font-size: 18px;
    font-weight: bold;
    border: none;
    border-radius: 50px;
    transition: all 0.3s ease-in-out;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.custom-btn:hover {
    background: linear-gradient(135deg, rgb(0, 150, 200), rgb(0, 217, 255));
    transform: scale(1.05);
    box-shadow: 0px 5px 15px rgba(0, 217, 255, 0.4);
}

.custom-btn i {
    margin: 0 8px;
}
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("scrollToTop");
        await JSRuntime.InvokeVoidAsync("openNavMenu");
    }
}

<script>
    window.scrollToTop = function () {
        window.scrollTo(0, 0);
    };

    window.openNavMenu = function () {
        let toggler = document.querySelector('.navbar-toggler');
        if (toggler && !toggler.checked) {
            toggler.click();  // Simulate a click to open the menu
        }
    };
</script>